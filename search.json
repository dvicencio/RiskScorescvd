[{"path":"https://dvicencio.github.io/RiskScorescvd/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Daniel Perez-Vicencio Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Perez-Vicencio. Author, maintainer. Dimitrios Doudesis. Author. Alexander JF Thurston. Author. Jeremy Selva. Author.","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Perez-Vicencio D, Doudesis D, Thurston , Selva J (2025). RiskScorescvd: Cardiovascular Risk Scores Calculator. R package version 0.2.0, https://dvicencio.github.io/RiskScorescvd/, https://github.com/dvicencio/RiskScorescvd.","code":"@Manual{,   title = {RiskScorescvd: Cardiovascular Risk Scores Calculator},   author = {Daniel Perez-Vicencio and Dimitrios Doudesis and Alexander JF Thurston and Jeremy Selva},   year = {2025},   note = {R package version 0.2.0, https://dvicencio.github.io/RiskScorescvd/},   url = {https://github.com/dvicencio/RiskScorescvd}, }"},{"path":"https://dvicencio.github.io/RiskScorescvd/index.html","id":"riskscorescvd","dir":"","previous_headings":"","what":"Cardiovascular Risk Scores Calculator","title":"Cardiovascular Risk Scores Calculator","text":"Chest pain? Calculate cardiovascular risk score. goal RiskScorescvd r package calculate commonly used cardiovascular risk scores. developed five commonly used risk scores dependency (ASCVD [PooledCohort]) making following available: HEART EDACS GRACE 2.0 TIMI SCORE2/OP SCORE2-Diabetes SCORE2-CKD PCE (ASCVD) NOTE: Troponin values used. Additional functions Troponin T development","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Cardiovascular Risk Scores Calculator","text":"can install CRAN : can install development version RiskScorescvd GitHub :","code":"# Install from CRAN install.packages(\"RiskScorescvd\") # install.packages(\"devtools\") devtools::install_github(\"dvicencio/RiskScorescvd\")"},{"path":[]},{"path":"https://dvicencio.github.io/RiskScorescvd/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Cardiovascular Risk Scores Calculator","text":"basic example data set look calculate risk scores available package:","code":"library(RiskScorescvd) #> Loading required package: PooledCohort # Create a data frame or list with the necessary variables  # Set the number of rows  num_rows <- 100    # Create a large dataset with 100 rows   cohort_xx <- data.frame(    typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),    ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),    abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),    ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),    Age = as.numeric(sample(30:80, num_rows, replace = TRUE)),    diabetes = sample(c(1, 0), num_rows, replace = TRUE),    smoker = sample(c(1, 0), num_rows, replace = TRUE),    hypertension = sample(c(1, 0), num_rows, replace = TRUE),    hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),    family.history = sample(c(1, 0), num_rows, replace = TRUE),    atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),    presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),    Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE),    sweating = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),    pain.radiation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),    pleuritic = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),    palpation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),    ecg.twi = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),    second_hstni = as.numeric(sample(1:200, num_rows, replace = TRUE)),    killip.class = as.numeric(sample(1:4, num_rows, replace = TRUE)),    heart.rate = as.numeric(sample(0:300, num_rows, replace = TRUE)),    systolic.bp = as.numeric(sample(40:300, num_rows, replace = TRUE)),    aspirin = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),    creat = as.numeric(sample(0:4, num_rows, replace = TRUE)),    number.of.episodes.24h = as.numeric(sample(0:20, num_rows, replace = TRUE)),    previous.pci = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),    cardiac.arrest = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),    previous.cabg = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),    total.chol = as.numeric(sample(5:100, num_rows, replace = TRUE)),    total.hdl = as.numeric(sample(2:5, num_rows, replace = TRUE)),    Ethnicity = sample(c(\"white\", \"black\", \"asian\", \"other\"), num_rows, replace = TRUE),    eGFR = as.numeric(sample(15:120, num_rows, replace = TRUE)),    ACR = as.numeric(sample(5:1500, num_rows, replace = TRUE)),    trace = sample(c(\"trace\", \"1+\", \"2+\", \"3+\", \"4+\"), num_rows, replace = TRUE)  )    str(cohort_xx) #> 'data.frame':    100 obs. of  34 variables: #>  $ typical_symptoms.num   : num  5 1 2 4 1 0 0 2 3 2 ... #>  $ ecg.normal             : num  0 0 1 0 0 1 1 0 1 0 ... #>  $ abn.repolarisation     : num  0 0 1 1 0 0 0 0 0 0 ... #>  $ ecg.st.depression      : num  0 1 0 1 0 1 1 1 0 1 ... #>  $ Age                    : num  74 68 58 46 55 67 42 30 38 36 ... #>  $ diabetes               : num  1 1 0 0 0 0 1 0 1 0 ... #>  $ smoker                 : num  0 0 0 0 0 1 0 0 1 1 ... #>  $ hypertension           : num  0 1 1 0 0 1 0 1 1 0 ... #>  $ hyperlipidaemia        : num  1 0 1 0 0 1 0 0 1 1 ... #>  $ family.history         : num  0 0 1 0 1 1 0 0 0 1 ... #>  $ atherosclerotic.disease: num  0 0 1 0 1 0 1 0 0 0 ... #>  $ presentation_hstni     : num  37 18 79 34 71 16 80 18 26 99 ... #>  $ Gender                 : chr  \"male\" \"female\" \"male\" \"male\" ... #>  $ sweating               : num  0 1 0 1 0 1 0 0 0 0 ... #>  $ pain.radiation         : num  1 0 0 1 0 1 0 1 1 1 ... #>  $ pleuritic              : num  1 1 0 0 0 1 1 1 1 1 ... #>  $ palpation              : num  1 0 1 1 1 1 1 0 0 1 ... #>  $ ecg.twi                : num  1 0 0 0 0 1 1 0 0 1 ... #>  $ second_hstni           : num  48 89 65 13 11 132 184 61 71 154 ... #>  $ killip.class           : num  1 1 3 4 4 4 3 4 1 4 ... #>  $ heart.rate             : num  37 273 123 121 159 250 88 50 263 116 ... #>  $ systolic.bp            : num  109 240 206 285 175 254 281 146 258 288 ... #>  $ aspirin                : num  1 0 0 0 0 1 1 0 1 0 ... #>  $ creat                  : num  0 2 1 2 2 4 0 1 0 1 ... #>  $ number.of.episodes.24h : num  7 3 15 17 13 13 9 12 9 4 ... #>  $ previous.pci           : num  0 0 1 0 1 0 0 0 0 1 ... #>  $ cardiac.arrest         : num  1 1 1 1 0 1 1 1 1 0 ... #>  $ previous.cabg          : num  0 1 1 1 0 1 0 0 0 1 ... #>  $ total.chol             : num  30 88 16 92 83 63 88 99 31 56 ... #>  $ total.hdl              : num  3 5 2 4 2 2 4 3 3 3 ... #>  $ Ethnicity              : chr  \"other\" \"asian\" \"black\" \"white\" ... #>  $ eGFR                   : num  49 72 112 52 92 101 52 21 103 86 ... #>  $ ACR                    : num  599 1054 14 1132 1330 ... #>  $ trace                  : chr  \"1+\" \"trace\" \"3+\" \"1+\" ..."},{"path":"https://dvicencio.github.io/RiskScorescvd/index.html","id":"calculation-and-results","dir":"","previous_headings":"","what":"Calculation and Results","title":"Cardiovascular Risk Scores Calculator","text":"basic example calculate risk scores available package create new data set 12 new variables calculated classified risk scores:","code":"# Call the function with the cohort_xx to calculate all risk scores available in the package new_data_frame <- calc_scores(data = cohort_xx)   # Select columns created after calculation All_scores <- new_data_frame %>% select(HEART_score, HEART_strat, EDACS_score, EDACS_strat, GRACE_score, GRACE_strat, TIMI_score, TIMI_strat, SCORE2_score, SCORE2_strat, ASCVD_score, ASCVD_strat)  # Observe the results head(All_scores) #> # A tibble: 6 × 12 #> # Rowwise:  #>   HEART_score HEART_strat   EDACS_score EDACS_strat  GRACE_score GRACE_strat   #>         <dbl> <ord>               <dbl> <ord>              <dbl> <ord>         #> 1           7 High risk              15 Not low risk         115 Moderate risk #> 2           6 Moderate risk          11 Not low risk         124 High risk     #> 3           6 Moderate risk           8 Not low risk          97 Moderate risk #> 4           5 Moderate risk          12 Not low risk         107 Moderate risk #> 5           6 Moderate risk           0 Not low risk         127 High risk     #> 6           6 Moderate risk          16 Not low risk         153 High risk     #> # ℹ 6 more variables: TIMI_score <dbl>, TIMI_strat <ord>, SCORE2_score <dbl>, #> #   SCORE2_strat <ord>, ASCVD_score <dbl>, ASCVD_strat <ord>  # Create a summary of them to obtain an initial idea of distribution summary(All_scores) #>   HEART_score          HEART_strat  EDACS_score          EDACS_strat #>  Min.   : 3.0   Low risk     : 3   Min.   :-8.00   Low risk    : 3   #>  1st Qu.: 5.0   Moderate risk:55   1st Qu.: 3.00   Not low risk:97   #>  Median : 6.0   High risk    :42   Median :10.00                     #>  Mean   : 6.3                      Mean   : 9.40                     #>  3rd Qu.: 8.0                      3rd Qu.:14.25                     #>  Max.   :10.0                      Max.   :25.00                     #>   GRACE_score            GRACE_strat   TIMI_score           TIMI_strat #>  Min.   : 36.00   Low risk     :26   Min.   :2.00   Very low risk: 0   #>  1st Qu.: 87.75   Moderate risk:38   1st Qu.:3.75   Low risk     :11   #>  Median :106.50   High risk    :36   Median :4.00   Moderate risk:49   #>  Mean   :110.31                      Mean   :4.24   High risk    :40   #>  3rd Qu.:132.25                      3rd Qu.:5.00                      #>  Max.   :220.00                      Max.   :7.00                      #>   SCORE2_score           SCORE2_strat  ASCVD_score            ASCVD_strat #>  Min.   :  0.20   Very low risk: 0    Min.   :0.0000   Very low risk:12   #>  1st Qu.: 46.17   Low risk     : 7    1st Qu.:0.1675   Low risk     : 4   #>  Median : 98.65   Moderate risk: 2    Median :0.4500   Moderate risk:13   #>  Mean   : 73.09   High risk    :91    Mean   :0.4947   High risk    :71   #>  3rd Qu.:100.00                       3rd Qu.:0.8600                      #>  Max.   :100.00                       Max.   :1.0000"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/ASCVD.html","id":null,"dir":"Reference","previous_headings":"","what":"ASCVD (Atherosclerotic Cardiovascular Disease) Risk Algorithm including Known ASCVD from AHA/ACC function — ASCVD","title":"ASCVD (Atherosclerotic Cardiovascular Disease) Risk Algorithm including Known ASCVD from AHA/ACC function — ASCVD","text":"function implements ASCVD score calculation vector Scored using 3 steps Step 1: High-Risk Criteria: History ASCVD  History ASCVD - History acute coronary syndrome (ACS), myocardial infarction (MI), stable angina, coronary/arterial revascularization, stroke, transient ischemic attack, Peripheral Arterial Disease (PAD) atherosclerosis Step 2: High-Risk Criteria: Extreme LDL LDL Cholesterol >= 190mg/dL (4.92 mmol/L) Step 3: ASCVD Risk Criteria: Apply LDL 70-189mg/dL (1.81-4.90 mmol/L) Age Diabetes Total cholesterol HDL cholesterol Systolic BP Treatment Hypertension Smoker Race Black British Black; everything else White Three possible outcome High risk - Intensity Statin Therapy Moderate risk- Intensity Statin Therapy Low risk - Intensity Statin Therapy","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/ASCVD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ASCVD (Atherosclerotic Cardiovascular Disease) Risk Algorithm including Known ASCVD from AHA/ACC function — ASCVD","text":"","code":"ASCVD(   Gender = Gender,   Ethnicity = Ethnicity,   Age = Age,   total.chol = total.chol,   total.hdl = total.hdl,   systolic.bp = systolic.bp,   hypertension = hypertension,   smoker = smoker,   diabetes = diabetes,   classify = FALSE )"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/ASCVD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ASCVD (Atherosclerotic Cardiovascular Disease) Risk Algorithm including Known ASCVD from AHA/ACC function — ASCVD","text":"Gender binary character vector sex values. Categories include 'male' 'female' Ethnicity character vector, 'white', 'black', 'asian', Age numeric vector age values, years total.chol numeric vector total cholesterol values, mmol/L total.hdl numeric vector total high density lipoprotein HDL values, mmol/L systolic.bp numeric vector systolic blood pressure continuous values hypertension binary numeric vector, 1 = yes 0 = smoker binary numeric vector, 1 = yes 0 = diabetes binary numeric vector, 1 = yes 0 = classify logical parameter indicate classification Scores \"TRUE\" none \"FALSE\"","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/ASCVD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ASCVD (Atherosclerotic Cardiovascular Disease) Risk Algorithm including Known ASCVD from AHA/ACC function — ASCVD","text":"vector ASCVD score calculations /vector classifications indicated","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/ASCVD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ASCVD (Atherosclerotic Cardiovascular Disease) Risk Algorithm including Known ASCVD from AHA/ACC function — ASCVD","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100  # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(30:80, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family.history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE),   sweating = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pain.radiation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pleuritic = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   palpation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.twi = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   second_hstni = as.numeric(sample(1:200, num_rows, replace = TRUE)),   killip.class = as.numeric(sample(1:4, num_rows, replace = TRUE)),   systolic.bp = as.numeric(sample(0:300, num_rows, replace = TRUE)),   heart.rate = as.numeric(sample(0:300, num_rows, replace = TRUE)),   creat = as.numeric(sample(0:4, num_rows, replace = TRUE)),   cardiac.arrest = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.pci = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.cabg = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   aspirin = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   number.of.episodes.24h = as.numeric(sample(0:20, num_rows, replace = TRUE)),   total.chol = as.numeric(sample(2:6, num_rows, replace = TRUE)),   total.hdl = as.numeric(sample(2:5, num_rows, replace = TRUE)),   Ethnicity = sample(c(\"white\", \"black\", \"asian\", \"other\"), num_rows, replace = TRUE) )   # Call the function with the cohort_xx  results <- cohort_xx %>% rowwise() %>%  mutate(ASCVD_score = ASCVD(Gender, Ethnicity, Age, total.chol, total.hdl,  systolic.bp,hypertension, smoker, diabetes, classify = FALSE))"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/ASCVD_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"ASCVD risk score function for data frame; ASCVD = Atherosclerotic Cardiovascular Disease — ASCVD_scores","title":"ASCVD risk score function for data frame; ASCVD = Atherosclerotic Cardiovascular Disease — ASCVD_scores","text":"function allows calculate ASCVD score row wise data frame required variables. retrieve data frame two extra columns including calculations classifications","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/ASCVD_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ASCVD risk score function for data frame; ASCVD = Atherosclerotic Cardiovascular Disease — ASCVD_scores","text":"","code":"ASCVD_scores(   data,   Gender = Gender,   Ethnicity = Ethnicity,   Age = Age,   total.chol = total.chol,   total.hdl = total.hdl,   systolic.bp = systolic.bp,   hypertension = hypertension,   smoker = smoker,   diabetes = diabetes,   classify )"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/ASCVD_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ASCVD risk score function for data frame; ASCVD = Atherosclerotic Cardiovascular Disease — ASCVD_scores","text":"data data frame variables needed calculation: Gender, Ethnicity, Age, total.chol, total.hd, systolic.bp,hypertension, smoker, diabetes Gender binary character vector sex values. Categories include 'male' 'female'. Ethnicity character vector, 'white', 'black', 'asian', Age numeric vector age values, years total.chol numeric vector total cholesterol values, mmol/L total.hdl numeric vector total high density lipoprotein HDL values, mmol/L systolic.bp numeric vector systolic blood pressure continuous values hypertension binary numeric vector, 1 = yes 0 = smoker binary numeric vector, 1 = yes 0 = diabetes binary numeric vector, 1 = yes 0 = classify logical parameter indicate classification Scores \"TRUE\" none \"FALSE\"","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/ASCVD_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ASCVD risk score function for data frame; ASCVD = Atherosclerotic Cardiovascular Disease — ASCVD_scores","text":"data frame two extra columns including ASCVD score calculations classifications","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/ASCVD_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ASCVD risk score function for data frame; ASCVD = Atherosclerotic Cardiovascular Disease — ASCVD_scores","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100  # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(30:80, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family.history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE),   sweating = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pain.radiation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pleuritic = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   palpation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.twi = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   second_hstni = as.numeric(sample(1:200, num_rows, replace = TRUE)),   killip.class = as.numeric(sample(1:4, num_rows, replace = TRUE)),   systolic.bp = as.numeric(sample(0:300, num_rows, replace = TRUE)),   heart.rate = as.numeric(sample(0:300, num_rows, replace = TRUE)),   creat = as.numeric(sample(0:4, num_rows, replace = TRUE)),   cardiac.arrest = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.pci = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.cabg = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   aspirin = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   number.of.episodes.24h = as.numeric(sample(0:20, num_rows, replace = TRUE)),   total.chol = as.numeric(sample(2:6, num_rows, replace = TRUE)),   total.hdl = as.numeric(sample(2:5, num_rows, replace = TRUE)),   Ethnicity = sample(c(\"white\", \"black\", \"asian\", \"other\"), num_rows, replace = TRUE) )   # Call the function with the cohort_xx result <- ASCVD_scores(data = cohort_xx, classify = TRUE) # Print the results summary(result$ASCVD_score) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  0.0000  0.0000  0.0200  0.1003  0.1425  0.6500  summary(result$ASCVD_strat) #> Very low risk      Low risk Moderate risk     High risk  #>            58             7            17            18"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/EDACS.html","id":null,"dir":"Reference","previous_headings":"","what":"Emergency Department Assessment of Chest Pain Score (EDACS) function — EDACS","title":"Emergency Department Assessment of Chest Pain Score (EDACS) function — EDACS","text":"function implements EDACS score calculation vector Age - 18-45 = 2 46-50 = 4 51-55 = 6 56-60 = 8 61-65 = 10 66-70 = 12 71-75 = 14 76-80 = 16 81-85 = 18 >=86 = 20 Sex - Female = 0 Male = 6 Known coronary artery disease >=3 risk factors* risk factors apply patients 18-50- = 0 yes = 4 Symptoms signs Diaphoresis                                         = 0   yes = 3 Pain radiates arm, shoulder, neck, jaw        = 0   yes = 5 Pain occurred worsened inspiration          = 0   yes = -4 Pain reproduced palpation                     = 0   yes = -6 Two possible outcomes Low risk cohort: EDACS <16 EKG shows new ischemia 0-hr 2-hr troponin negative. low risk cohort: EDACS >=16 EKG shows new ischemia 0-hr 2-hr troponin positive.","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/EDACS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emergency Department Assessment of Chest Pain Score (EDACS) function — EDACS","text":"","code":"EDACS(   Age = Age,   Gender = Gender,   diabetes = diabetes,   smoker = smoker,   hypertension = hypertension,   hyperlipidaemia = hyperlipidaemia,   family.history = family.history,   sweating = sweating,   pain.radiation = pain.radiation,   pleuritic = pleuritic,   palpation = palpation,   ecg.st.depression = ecg.st.depression,   ecg.twi = ecg.twi,   presentation_hstni = presentation_hstni,   second_hstni = second_hstni,   classify = FALSE )"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/EDACS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Emergency Department Assessment of Chest Pain Score (EDACS) function — EDACS","text":"Age numeric vector age values, years Gender binary character vector sex values. Categories include 'male' 'female'. diabetes binary numeric vector, 1 = yes 0 = smoker binary numeric vector, 1 = yes 0 = hypertension binary numeric vector, 1 = yes 0 = hyperlipidaemia binary numeric vector, 1 = yes 0 = family.history binary numeric vector, 1 = yes 0 = sweating binary numeric vector, 1 = yes 0 = pain.radiation binary numeric vector, 1 = yes 0 = pleuritic binary numeric vector, 1 = yes 0 = palpation binary numeric vector, 1 = yes 0 = ecg.st.depression binary numeric vector, 1 = yes 0 = ecg.twi binary numeric vector, 1 = yes 0 = presentation_hstni continuous numeric vector troponin levels second_hstni binary numeric vector, 1 = yes 0 = classify logical parameter indicate classification scores \"TRUE\" none \"FALSE\"","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/EDACS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Emergency Department Assessment of Chest Pain Score (EDACS) function — EDACS","text":"vector EDACS score calculations /vector classifications indicated","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/EDACS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Emergency Department Assessment of Chest Pain Score (EDACS) function — EDACS","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100  # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(30:80, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family.history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE),   sweating = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pain.radiation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pleuritic = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   palpation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.twi = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   second_hstni = as.numeric(sample(1:200, num_rows, replace = TRUE)) )  # Call the function with the cohort_xx  results <- cohort_xx %>% rowwise() %>% mutate(EDACS_score = EDACS(Age, Gender, diabetes, smoker, hypertension, hyperlipidaemia, family.history, sweating, pain.radiation, pleuritic, palpation, ecg.st.depression, ecg.twi, presentation_hstni, second_hstni, classify = FALSE))"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/EDACS_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"EDACS score function for data frame; EDACS = Emergency Department Assessment of Chest Pain Score — EDACS_scores","title":"EDACS score function for data frame; EDACS = Emergency Department Assessment of Chest Pain Score — EDACS_scores","text":"function allows calculate EDACS score row wise data frame required variables. retrieve data frame two extra columns including calculations classifications","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/EDACS_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EDACS score function for data frame; EDACS = Emergency Department Assessment of Chest Pain Score — EDACS_scores","text":"","code":"EDACS_scores(   data,   Age = Age,   Gender = Gender,   diabetes = diabetes,   smoker = smoker,   hypertension = hypertension,   hyperlipidaemia = hyperlipidaemia,   family.history = family.history,   sweating = sweating,   pain.radiation = pain.radiation,   pleuritic = pleuritic,   palpation = palpation,   ecg.st.depression = ecg.st.depression,   ecg.twi = ecg.twi,   presentation_hstni = presentation_hstni,   second_hstni = second_hstni,   classify )"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/EDACS_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EDACS score function for data frame; EDACS = Emergency Department Assessment of Chest Pain Score — EDACS_scores","text":"data data frame variables needed calculation: Age, Gender, diabetes, smoker, hypertension, hyperlipidaemia, family.history, sweating, pain.radiation, pleuritic, palpation, ecg.st.depression, ecg.twi,  presentation_hstni, second_hstni, classify Age numeric vector age values, years Gender binary character vector sex values. Categories include 'male' 'female' diabetes binary numeric vector, 1 = yes 0 = smoker binary numeric vector, 1 = yes 0 = hypertension binary numeric vector, 1 = yes 0 = hyperlipidaemia binary numeric vector, 1 = yes 0 = family.history binary numeric vector, 1 = yes 0 = sweating binary numeric vector, 1 = yes 0 = pain.radiation binary numeric vector, 1 = yes 0 = pleuritic binary numeric vector, 1 = yes 0 = palpation binary numeric vector, 1 = yes 0 = ecg.st.depression binary numeric vector, 1 = yes 0 = ecg.twi binary numeric vector, 1 = yes 0 = presentation_hstni continuous numeric vector troponin levels second_hstni binary numeric vector, 1 = yes 0 = classify logical parameter indicate classification Scores \"TRUE\" none \"FALSE\"","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/EDACS_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EDACS score function for data frame; EDACS = Emergency Department Assessment of Chest Pain Score — EDACS_scores","text":"data frame two extra columns including 'EDACS_score' calculations classifications, 'EDACS_strat'","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/EDACS_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EDACS score function for data frame; EDACS = Emergency Department Assessment of Chest Pain Score — EDACS_scores","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100  # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(30:80, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family.history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE),   sweating = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pain.radiation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pleuritic = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   palpation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.twi = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   second_hstni = as.numeric(sample(1:200, num_rows, replace = TRUE)) )  # Call the function with the cohort_xx  result <- EDACS_scores(data = cohort_xx, classify = TRUE) summary(result$EDACS_strat) #>     Low risk Not low risk  #>            1           99  summary(result$EDACS_score) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   -3.00    4.75   10.00   10.18   14.25   25.00"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/GRACE.html","id":null,"dir":"Reference","previous_headings":"","what":"GRACE Global Registry of Acute Coronary Events version 2.0 (6 months outcome) function; — GRACE","title":"GRACE Global Registry of Acute Coronary Events version 2.0 (6 months outcome) function; — GRACE","text":"function implements GRACE 2.0 6 months outcome score calculation vector Needed variables ——————————————————– Age = Heart Rate = H Systolic BP = S Creatine = C killip.class class (signs/symptoms) = K CHF = 1 Rales /JVD = 2 Pulmonary edema = 3 Cardiogenic shock = 4 Cardiac Arrest = X = 0  yes = 1 ST segment deviation EKG? = E = 0  yes = 1 Abnormal cardiac enzymes = T = 0  yes = 1 Add variables equation solve p xb= -7.7035 + (0.0531*) + (0.0087*H) - (0.0168*S) + (0.1823*C) + (0.6931* K) + (1.4586*Xt) + (0.4700*E) + (0.8755*T); p=(exp(xb))/(1 + exp(xb)); Possible outcomes percentage Probability death admission 6 months given footnote: * = Available, NA = notavailable. Another formula found https://www.outcomes-umassmed.org/grace/files/GRACE_RiskModel_Coefficients.pdf https://www.outcomes-umassmed.org/grace/grace_risk_table.aspx https://www.outcomes-umassmed.org/grace/acs_risk2/index.html •\tLow \t\t\t       1-88 •\tIntermediate \t\t89-118 •\tHigh \t\t\t     119-263","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/GRACE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GRACE Global Registry of Acute Coronary Events version 2.0 (6 months outcome) function; — GRACE","text":"","code":"GRACE(   killip.class = killip.class,   systolic.bp = systolic.bp,   heart.rate = heart.rate,   Age = Age,   creat = creat,   ecg.st.depression = ecg.st.depression,   presentation_hstni = presentation_hstni,   cardiac.arrest = cardiac.arrest,   Gender = Gender,   classify = FALSE )"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/GRACE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GRACE Global Registry of Acute Coronary Events version 2.0 (6 months outcome) function; — GRACE","text":"killip.class numeric vector killip class values, 1 4 systolic.bp numeric vector systolic blood pressure continuous values heart.rate numeric vector heart rate continuous values Age numeric vector age values, years creat continuous numeric vector creatine levels ecg.st.depression binary numeric vector, 1 = yes 0 = presentation_hstni continuous numeric vector troponin levels cardiac.arrest binary numeric vector, 1 = yes 0 = Gender binary character vector sex values. Categories include 'male' 'female' classify logical parameter indicate classification Scores \"TRUE\" none \"FALSE\"","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/GRACE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GRACE Global Registry of Acute Coronary Events version 2.0 (6 months outcome) function; — GRACE","text":"vector GRACE score calculations /vector classifications indicated","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/GRACE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GRACE Global Registry of Acute Coronary Events version 2.0 (6 months outcome) function; — GRACE","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100  # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(30:80, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family.history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE),   sweating = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pain.radiation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pleuritic = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   palpation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.twi = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   second_hstni = as.numeric(sample(1:200, num_rows, replace = TRUE)),   killip.class = as.numeric(sample(1:4, num_rows, replace = TRUE)),   systolic.bp = as.numeric(sample(0:300, num_rows, replace = TRUE)),   heart.rate = as.numeric(sample(0:300, num_rows, replace = TRUE)),   creat = as.numeric(sample(0:4, num_rows, replace = TRUE)),   cardiac.arrest = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)) ) # Call the function with the cohort_xx    results <- cohort_xx %>% rowwise() %>%   mutate(GRACE_score = GRACE(killip.class, systolic.bp, heart.rate,   Age, creat, ecg.st.depression, presentation_hstni, cardiac.arrest, Gender, classify = FALSE))"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/GRACE_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"GRACE 2.0 score function for data frame; GRACE 2.0 = Global Registry of Acute Coronary Events version 2.0 — GRACE_scores","title":"GRACE 2.0 score function for data frame; GRACE 2.0 = Global Registry of Acute Coronary Events version 2.0 — GRACE_scores","text":"function allows calculate GRACE 2.0 score row wise data frame required variables. retrieve data frame two extra columns including calculations classifications","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/GRACE_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GRACE 2.0 score function for data frame; GRACE 2.0 = Global Registry of Acute Coronary Events version 2.0 — GRACE_scores","text":"","code":"GRACE_scores(   data,   killip.class = killip.class,   systolic.bp = systolic.bp,   heart.rate = heart.rate,   Age = Age,   creat = creat,   ecg.st.depression = ecg.st.depression,   presentation_hstni = presentation_hstni,   cardiac.arrest = cardiac.arrest,   Gender = Gender,   classify )"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/GRACE_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GRACE 2.0 score function for data frame; GRACE 2.0 = Global Registry of Acute Coronary Events version 2.0 — GRACE_scores","text":"data data frame variables needed calculation: killip.class, systolic.bp, heart.rate, Age, creat, ecg.st.depression, presentation_hstni, cardiac.arrest, Gender, classify killip.class numeric vector killip class values, 1 4 systolic.bp numeric vector systolic blood pressure continuous values heart.rate numeric vector heart rate continuous values Age numeric vector age values, years creat continuous numeric vector creatine levels ecg.st.depression binary numeric vector, 1 = yes 0 = presentation_hstni continuous numeric vector troponin levels cardiac.arrest binary numeric vector, 1 = yes 0 = Gender binary character vector sex values. Categories include 'male' 'female' classify logical parameter indicate classification Scores \"TRUE\" none \"FALSE\"","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/GRACE_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GRACE 2.0 score function for data frame; GRACE 2.0 = Global Registry of Acute Coronary Events version 2.0 — GRACE_scores","text":"data frame two extra columns including 'GRACE_score' calculations classifications, 'GRACE_strat'","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/GRACE_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GRACE 2.0 score function for data frame; GRACE 2.0 = Global Registry of Acute Coronary Events version 2.0 — GRACE_scores","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100  # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(30:80, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family.history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE),   sweating = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pain.radiation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pleuritic = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   palpation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.twi = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   second_hstni = as.numeric(sample(1:200, num_rows, replace = TRUE)),   killip.class = as.numeric(sample(1:4, num_rows, replace = TRUE)),   systolic.bp = as.numeric(sample(0:300, num_rows, replace = TRUE)),   heart.rate = as.numeric(sample(0:300, num_rows, replace = TRUE)),   creat = as.numeric(sample(0:4, num_rows, replace = TRUE)),   cardiac.arrest = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)) ) # Call the function with the cohort_xx result <- GRACE_scores(data = cohort_xx, classify = TRUE) summary(result$GRACE_strat) #>      Low risk Moderate risk     High risk  #>            13            22            65  summary(result$GRACE_score) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>    40.0   104.8   131.5   137.8   169.0   229.0"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/HEART.html","id":null,"dir":"Reference","previous_headings":"","what":"History, ECG, Age, Risk factors and Troponin (HEART) risk score function — HEART","title":"History, ECG, Age, Risk factors and Troponin (HEART) risk score function — HEART","text":"function implements HEART score calculation vector History - Absence history coronary ischemia: nonspecific  = 0 Nonspecific + suspicious elements: moderately suspicious = 1 Mainly suspicious elements (middle- left-sided, / heavy chest pain, radiation, / /relief symptoms sublingual nitrates):  = 2 EGG - Normal ECG according Minnesota criteria (criteria?)  = 0 Repolarization abnormalities without / significant ST-segment depression elevation                   = 1 Presence bundle branch block pacemaker rhythm, / typical abnormalities indicative left ventricular hypertrophy, / repolarization abnormalities probably caused digoxin use, / case unchanged known repolarization disturbances.            = 1 Significant ST-segment depressions / elevations absence bundle branch block, / left ventricular hypertrophy, use digoxin       =  2 Age - Younger 45 = 0 45 65 years old = 1 65 years older = 2 Risk facrtor - Currently treated diabetes mellitus, / current recent (<90 days) smoker, / diagnosed /treated hypertension, / diagnosed hypercholesterolemia, / family history coronary artery disease, obesity (body mass index BMI >30), history significant atherosclerosis, / (coronary revascularization, myocardial infarction, stroke, / peripheral arterial disease, / irrespective risk factors coronary artery disease) None = 0 One two = 1 Three = 2 Troponin T - threshold positivity = 0                    1 3 times threshold positivity = 1    higher 3 times threshold positivity   = 2    Two possible outcomes: 0-3 = Low risk 4-6 = Moderate risk 7 = High risk HEART score: guide application emergency department paper reference Website: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6005932/","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/HEART.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"History, ECG, Age, Risk factors and Troponin (HEART) risk score function — HEART","text":"","code":"HEART(   typical_symptoms.num = typical_symptoms.num,   ecg.normal = ecg.normal,   abn.repolarisation = abn.repolarisation,   ecg.st.depression = ecg.st.depression,   Age = Age,   diabetes = diabetes,   smoker = smoker,   hypertension = hypertension,   hyperlipidaemia = hyperlipidaemia,   family.history = family.history,   atherosclerotic.disease = atherosclerotic.disease,   presentation_hstni = presentation_hstni,   Gender = Gender,   classify = classify )"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/HEART.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"History, ECG, Age, Risk factors and Troponin (HEART) risk score function — HEART","text":"typical_symptoms.num numeric vector number typical symptoms ecg.normal binary numeric vector,  1 = yes 0 = abn.repolarisation binary numeric vector,  1 = yes 0 = ecg.st.depression binary numeric vector, 1 = yes 0 = Age numeric vector age values, years diabetes binary numeric vector, 1 = yes 0 = smoker binary numeric vector, 1 = yes 0 = hypertension binary numeric vector, 1 = yes 0 = hyperlipidaemia binary numeric vector, 1 = yes 0 = family.history binary numeric vector, 1 = yes 0 = atherosclerotic.disease binary numeric vector, 1 = yes 0 = presentation_hstni continuous numeric vector troponin levels Gender binary character vector sex values. Categories include 'male' 'female' classify logical parameter indicate classification Scores \"TRUE\" none \"FALSE\"","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/HEART.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"History, ECG, Age, Risk factors and Troponin (HEART) risk score function — HEART","text":"vector HEART score calculations /vector classifications indicated","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/HEART.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"History, ECG, Age, Risk factors and Troponin (HEART) risk score function — HEART","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100 # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(30:80, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family.history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE) )  # Call the function with the cohort_xx   results <- cohort_xx %>% rowwise() %>%  mutate(HEART_score = HEART(typical_symptoms.num, ecg.normal,  abn.repolarisation, ecg.st.depression, Age, diabetes, smoker, hypertension,  hyperlipidaemia, family.history, atherosclerotic.disease,  presentation_hstni, Gender, classify = FALSE))"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/HEART_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"HEART risk score function for data frame; HEART = History, ECG, Age, Risk factors, Troponin — HEART_scores","title":"HEART risk score function for data frame; HEART = History, ECG, Age, Risk factors, Troponin — HEART_scores","text":"function allows calculate HEART score row wise data frame required variables. retrieve data frame two extra columns including calculations classifications","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/HEART_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HEART risk score function for data frame; HEART = History, ECG, Age, Risk factors, Troponin — HEART_scores","text":"","code":"HEART_scores(   data,   typical_symptoms.num = typical_symptoms.num,   ecg.normal = ecg.normal,   abn.repolarisation = abn.repolarisation,   ecg.st.depression = ecg.st.depression,   Age = Age,   diabetes = diabetes,   smoker = smoker,   hypertension = hypertension,   hyperlipidaemia = hyperlipidaemia,   family.history = family.history,   atherosclerotic.disease = atherosclerotic.disease,   presentation_hstni = presentation_hstni,   Gender = Gender,   classify )"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/HEART_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HEART risk score function for data frame; HEART = History, ECG, Age, Risk factors, Troponin — HEART_scores","text":"data data frame variables needed calculation: typical_symptoms.num, ecg.normal, abn.repolarisation, ecg.st.depression,Age, diabetes, smoker, hypertension, hyperlipidaemia, family.history, atherosclerotic.disease, presentation_hstni, Gender typical_symptoms.num numeric vector number typical symptoms ecg.normal binary numeric vector,  1 = yes 0 = abn.repolarisation binary numeric vector,  1 = yes 0 = ecg.st.depression binary numeric vector, 1 = yes 0 = Age numeric vector age values, years diabetes binary numeric vector, 1 = yes 0 = smoker binary numeric vector, 1 = yes 0 = hypertension binary numeric vector, 1 = yes 0 = hyperlipidaemia binary numeric vector, 1 = yes 0 = family.history binary numeric vector, 1 = yes 0 = atherosclerotic.disease binary numeric vector, 1 = yes 0 = presentation_hstni continuous numeric vector troponin levels Gender binary character vector sex values. Categories include 'male' 'female' classify logical parameter indicate classification Scores \"TRUE\" none \"FALSE\"","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/HEART_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HEART risk score function for data frame; HEART = History, ECG, Age, Risk factors, Troponin — HEART_scores","text":"data frame two extra columns including HEART score calculations classifications","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/HEART_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HEART risk score function for data frame; HEART = History, ECG, Age, Risk factors, Troponin — HEART_scores","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100 # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(30:80, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family.history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE) ) # Call the function with the cohort_xx result <- HEART_scores(data = cohort_xx, classify = TRUE) # Print the results summary(result$HEART_score) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>    2.00    5.00    6.00    6.14    7.00   10.00  summary(result$HEART_strat) #>      Low risk Moderate risk     High risk  #>             4            51            45"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/RiskScoresCalc.html","id":null,"dir":"Reference","previous_headings":"","what":"Six commonly used cardiovascular risk scores for the prediction of major cardiac events (MACE) — RiskScoresCalc","title":"Six commonly used cardiovascular risk scores for the prediction of major cardiac events (MACE) — RiskScoresCalc","text":"function implements seven cardiovascular risk scores row wise data frame required variables. retrieve data frame two extra columns risk score including calculations classifications","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/RiskScoresCalc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Six commonly used cardiovascular risk scores for the prediction of major cardiac events (MACE) — RiskScoresCalc","text":"","code":"calc_scores(   data,   typical_symptoms.num = typical_symptoms.num,   ecg.normal = ecg.normal,   abn.repolarisation = abn.repolarisation,   ecg.st.depression = ecg.st.depression,   Age = Age,   diabetes = diabetes,   smoker = smoker,   hypertension = hypertension,   hyperlipidaemia = hyperlipidaemia,   family.history = family.history,   atherosclerotic.disease = atherosclerotic.disease,   presentation_hstni = presentation_hstni,   Gender = Gender,   sweating = sweating,   pain.radiation = pain.radiation,   pleuritic = pleuritic,   palpation = palpation,   ecg.twi = ecg.twi,   second_hstni = second_hstni,   killip.class = killip.class,   heart.rate = heart.rate,   systolic.bp = systolic.bp,   aspirin = aspirin,   number.of.episodes.24h = number.of.episodes.24h,   previous.pci = previous.pci,   creat = creat,   previous.cabg = previous.cabg,   total.chol = total.chol,   total.hdl = total.hdl,   Ethnicity = Ethnicity,   eGFR = eGFR,   ACR = NA,   trace = NA )"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/RiskScoresCalc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Six commonly used cardiovascular risk scores for the prediction of major cardiac events (MACE) — RiskScoresCalc","text":"data data frame variables needed calculation: typical_symptoms.num numeric vector number typical symptoms; renames alternative column name ecg.normal binary numeric vector,  1 = yes 0 = ; renames alternative column name abn.repolarisation binary numeric vector,  1 = yes 0 = ; renames alternative column name ecg.st.depression binary numeric vector, 1 = yes 0 = ; renames alternative column name Age numeric vector age values, years; renames alternative column name diabetes binary numeric vector, 1 = yes 0 = ; renames alternative column name smoker binary numeric vector, 1 = yes 0 = ; renames alternative column name hypertension binary numeric vector, 1 = yes 0 = ; renames alternative column name hyperlipidaemia binary numeric vector, 1 = yes 0 = ; renames alternative column name family.history binary numeric vector, 1 = yes 0 = ; renames alternative column name atherosclerotic.disease binary numeric vector, 1 = yes 0 = ; renames alternative column name presentation_hstni continuous numeric vector troponin levels; renames alternative column name Gender binary character vector sex values. Categories include 'male' 'female'; renames alternative column name sweating binary numeric vector, 1 = yes 0 = ; renames alternative column name pain.radiation binary numeric vector, 1 = yes 0 = ; renames alternative column name pleuritic binary numeric vector, 1 = yes 0 = ; renames alternative column name palpation binary numeric vector, 1 = yes 0 = ; renames alternative column name ecg.twi binary numeric vector, 1 = yes 0 = ; renames alternative column name second_hstni binary numeric vector, 1 = yes 0 = ; renames alternative column name killip.class numeric vector killip class values, 1 4; renames alternative column name heart.rate numeric vector heart rate continuous values; renames alternative column name systolic.bp numeric vector systolic blood pressure continuous values; renames alternative column name aspirin binary numeric vector, 1 = yes 0 = ; renames alternative column name number..episodes.24h numeric vector number angina episodes 24 hours; renames alternative column name previous.pci binary numeric vector, 1 = yes 0 = ; renames alternative column name creat continuous numeric vector creatine levels previous.cabg binary numeric vector, 1 = yes 0 = ; renames alternative column name total.chol numeric vector total cholesterol values, mmol/L; renames alternative column name total.hdl numeric vector total high density lipoprotein HDL values, mmol/L; renames alternative column name Ethnicity character vector, 'white', 'black', 'asian', eGFR numeric vector total estimated glomerular rate (eGFR) values, mL/min/1.73m2 ACR numeric vector total urine albumin creatine ratio (ACR) values, mg/g. Default set NA trace character vector urine protein dipstick categories. Categories include 'negative', 'trace', '1+', '2+', '3+', '4+. Default set NA","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/RiskScoresCalc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Six commonly used cardiovascular risk scores for the prediction of major cardiac events (MACE) — RiskScoresCalc","text":"data frame two extra columns including cardiovascular risk score calculations classifications","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/RiskScoresCalc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Six commonly used cardiovascular risk scores for the prediction of major cardiac events (MACE) — RiskScoresCalc","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100  # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(30:80, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family.history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE),   sweating = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pain.radiation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pleuritic = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   palpation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.twi = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   second_hstni = as.numeric(sample(1:200, num_rows, replace = TRUE)),   killip.class = as.numeric(sample(1:4, num_rows, replace = TRUE)),   systolic.bp = as.numeric(sample(0:300, num_rows, replace = TRUE)),   heart.rate = as.numeric(sample(0:300, num_rows, replace = TRUE)),   creat = as.numeric(sample(0:4, num_rows, replace = TRUE)),   cardiac.arrest = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.pci = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.cabg = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   aspirin = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   number.of.episodes.24h = as.numeric(sample(0:20, num_rows, replace = TRUE)),   total.chol = as.numeric(sample(2:6, num_rows, replace = TRUE)),   total.hdl = as.numeric(sample(2:5, num_rows, replace = TRUE)),   Ethnicity = sample(c(\"white\", \"black\", \"asian\", \"other\"), num_rows, replace = TRUE),   eGFR = as.numeric(sample(15:120, num_rows, replace = TRUE)),   ACR = as.numeric(sample(5:1500, num_rows, replace = TRUE)),   trace = sample(c(\"trace\", \"1+\", \"2+\", \"3+\", \"4+\"), num_rows, replace = TRUE) )    # Call the function with the cohort_xx  new_data_frame <- calc_scores(data = cohort_xx)"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2-slash-OP-CKD.html","id":null,"dir":"Reference","previous_headings":"","what":"Systematic COronary Risk Evaluation (SCORE) model function including chronic kidney disease (CKD) measures — SCORE2/OP-CKD","title":"Systematic COronary Risk Evaluation (SCORE) model function including chronic kidney disease (CKD) measures — SCORE2/OP-CKD","text":"function implements SCORE2 SCORE2 older population (OP) score calculation vector plus ckd add-ons suggested https://doi.org/10.1093/eurjpc/zwac216 publication *Diabetes mellitus included modelling since necessary recalibration approach, relies data whole population, including diabetes. However, SCORE2 intended use individuals diabetes validated population. risk prediction target population individuals without diabetes risk factor always 0, meaning coefficient can effectively ignored. formula SCORE2 Updated Supplementary Material page  9. paper: \"SCORE2 risk prediction algorithms: new models estimate 10-year risk cardiovascular disease Europe\" Age\t10-year risk fatal non-fatal cardiovascular disease | Low risk      |  Moderate risk  |  High risk  | | :———— | ————- | ————— | ———-: | | < 50 years    |   <2.5 | 50 - 69 years |    <5 | => 70 years   |   <7.5 classifications referred https://www.inanutshell.ch/en/digital-doctors-bag/score2--score2-op/#:~:text=SCORE2 underlying model developed validated using eligible data 3,054,840 individuals 34 different cohorts 5,997,719 individuals 34 independent cohorts, respectively, Chronic Kidney Disease Prognosis Consortium. https://doi.org/10.1093/eurjpc/zwac176","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2-slash-OP-CKD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Systematic COronary Risk Evaluation (SCORE) model function including chronic kidney disease (CKD) measures — SCORE2/OP-CKD","text":"","code":"SCORE2_CKD(   Risk.region,   Age = Age,   Gender = Gender,   smoker = smoker,   systolic.bp = systolic.bp,   diabetes = diabetes,   total.chol = total.chol,   total.hdl = total.hdl,   eGFR = eGFR,   ACR = NA,   trace = NA,   addon = \"ACR\",   classify )"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2-slash-OP-CKD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Systematic COronary Risk Evaluation (SCORE) model function including chronic kidney disease (CKD) measures — SCORE2/OP-CKD","text":"Risk.region character value set desired risk region calculations. Categories include \"Low\", \"Moderate\", \"High\", \"high\" Age numeric vector age values, years Gender binary character vector Gender values. Categories include 'male' 'female' smoker binary numeric vector, 1 = yes 0 = systolic.bp numeric vector systolic blood pressure continuous values diabetes binary numeric vector, 1 = yes 0 = total.chol numeric vector total cholesterol values, mmol/L total.hdl numeric vector total high density lipoprotein total.hdl values, mmol/L eGFR numeric vector total estimated glomerular rate (eGFR) values, mL/min/1.73m2 ACR numeric vector total urine albumin creatine ratio (ACR) values, mg/g. Default set NA trace character vector urine protein dipstick categories. Categories include 'negative', 'trace', '1+', '2+', '3+', '4+. Default set NA addon set add-wish calculate. Categories include 'ACR' 'trace'. Default set 'ACR' classify set TRUE wish add column scores' categories","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2-slash-OP-CKD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Systematic COronary Risk Evaluation (SCORE) model function including chronic kidney disease (CKD) measures — SCORE2/OP-CKD","text":"vector SCORE2/OP score calculations CKD add-ons /vector classifications indicated","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2-slash-OP-CKD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Systematic COronary Risk Evaluation (SCORE) model function including chronic kidney disease (CKD) measures — SCORE2/OP-CKD","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100  # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(40:85, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family.history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE),   sweating = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pain.radiation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pleuritic = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   palpation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.twi = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   second_hstni = as.numeric(sample(1:200, num_rows, replace = TRUE)),   killip.class = as.numeric(sample(1:4, num_rows, replace = TRUE)),   systolic.bp = as.numeric(sample(90:180, num_rows, replace = TRUE)),   heart.rate = as.numeric(sample(0:300, num_rows, replace = TRUE)),   creat = as.numeric(sample(0:4, num_rows, replace = TRUE)),   cardiac.arrest = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.pci = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.cabg = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   aspirin = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   number.of.episodes.24h = as.numeric(sample(0:20, num_rows, replace = TRUE)),   total.chol = as.numeric(round(runif(num_rows, 3.9, 7.2), 1)),   total.hdl = as.numeric(round(runif(num_rows, .8, 2.1), 1)),   Ethnicity = sample(c(\"white\", \"black\", \"asian\", \"other\"), num_rows, replace = TRUE),   eGFR = as.numeric(sample(15:120, num_rows, replace = TRUE)),   ACR = as.numeric(sample(5:1500, num_rows, replace = TRUE)),   trace = sample(c(\"trace\", \"1+\", \"2+\", \"3+\", \"4+\"), num_rows, replace = TRUE) )  # Call the function with the cohort_xx    results <- cohort_xx %>% rowwise() %>%   mutate(SCORE2OP_CKD_score = SCORE2_CKD(Risk.region = \"Low\", Age, Gender,   smoker, systolic.bp, diabetes, total.chol, total.hdl, eGFR, ACR, trace,   classify = FALSE))"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2-slash-OP.html","id":null,"dir":"Reference","previous_headings":"","what":"Systematic COronary Risk Evaluation (SCORE) model function — SCORE2/OP","title":"Systematic COronary Risk Evaluation (SCORE) model function — SCORE2/OP","text":"function implements SCORE2 SCORE2 older population (OP) score calculation vector *Diabetes mellitus included modelling since necessary recalibration approach, relies data whole population, including diabetes. However, SCORE2 intended use individuals diabetes validated population. risk prediction target population individuals without diabetes risk factor always 0, meaning coefficient can effectively ignored. formula SCORE2 Updated Supplementary Material page  9. paper: \"SCORE2 risk prediction algorithms: new models estimate 10-year risk cardiovascular disease Europe\" Age\t10-year risk fatal non-fatal cardiovascular disease | Low risk      |  Moderate risk  |  High risk  | | :———— | ————- | ————— | ———-: | | < 50 years    |   <2.5 | 50 - 69 years |    <5 | => 70 years   |   <7.5 classifications referred https://www.inanutshell.ch/en/digital-doctors-bag/score2--score2-op/#:~:text=SCORE2","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2-slash-OP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Systematic COronary Risk Evaluation (SCORE) model function — SCORE2/OP","text":"","code":"SCORE2(   Risk.region,   Age = Age,   Gender = Gender,   smoker = smoker,   systolic.bp = systolic.bp,   diabetes = diabetes,   total.chol = total.chol,   total.hdl = total.hdl,   classify )"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2-slash-OP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Systematic COronary Risk Evaluation (SCORE) model function — SCORE2/OP","text":"Risk.region character value set desired risk region calculations. Categories include \"Low\", \"Moderate\", \"High\", \"high\" Age numeric vector age values, years Gender binary character vector Gender values. Categories include 'male' 'female' smoker binary numeric vector, 1 = yes 0 = systolic.bp numeric vector systolic blood pressure continuous values diabetes binary numeric vector, 1 = yes 0 = total.chol numeric vector total cholesterol values, mmol/L total.hdl numeric vector total high density lipoprotein total.hdl values, mmol/L classify set TRUE wish add column scores' categories","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2-slash-OP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Systematic COronary Risk Evaluation (SCORE) model function — SCORE2/OP","text":"vector SCORE2/OP score calculations /vector classifications indicated","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2-slash-OP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Systematic COronary Risk Evaluation (SCORE) model function — SCORE2/OP","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100  # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(40:85, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family.history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE),   sweating = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pain.radiation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pleuritic = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   palpation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.twi = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   second_hstni = as.numeric(sample(1:200, num_rows, replace = TRUE)),   killip.class = as.numeric(sample(1:4, num_rows, replace = TRUE)),   systolic.bp = as.numeric(sample(90:180, num_rows, replace = TRUE)),   heart.rate = as.numeric(sample(0:300, num_rows, replace = TRUE)),   creat = as.numeric(sample(0:4, num_rows, replace = TRUE)),   cardiac.arrest = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.pci = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.cabg = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   aspirin = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   number.of.episodes.24h = as.numeric(sample(0:20, num_rows, replace = TRUE)),   total.chol = as.numeric(round(runif(num_rows, 3.9, 7.2), 1)),   total.hdl = as.numeric(round(runif(num_rows, .8, 2.1), 1)),   Ethnicity = sample(c(\"white\", \"black\", \"asian\", \"other\"), num_rows, replace = TRUE) )  # Call the function with the cohort_xx    results <- cohort_xx %>% rowwise() %>%   mutate(SCORE2OP_score = SCORE2(Risk.region = \"Low\", Age, Gender, smoker,   systolic.bp, diabetes, total.chol, total.hdl, classify = FALSE))"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_CKD_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"SCORE2/OP with CKD add-on risk score function for a data frame; SCORE2/OP = Systematic COronary Risk Evaluation /and Older Population CKD = Chronic kidney disease — SCORE2_CKD_scores","title":"SCORE2/OP with CKD add-on risk score function for a data frame; SCORE2/OP = Systematic COronary Risk Evaluation /and Older Population CKD = Chronic kidney disease — SCORE2_CKD_scores","text":"function allows calculate SCORE2 OP score CKD add-ons (eGFR, ACR, dipstick) row wise data frame required variables. retrieve data frame two extra columns including calculations classifications","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_CKD_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SCORE2/OP with CKD add-on risk score function for a data frame; SCORE2/OP = Systematic COronary Risk Evaluation /and Older Population CKD = Chronic kidney disease — SCORE2_CKD_scores","text":"","code":"SCORE2_CKD_scores(   data,   Risk.region,   Age = Age,   Gender = Gender,   smoker = smoker,   systolic.bp = systolic.bp,   diabetes = diabetes,   total.chol = total.chol,   total.hdl = total.hdl,   eGFR = eGFR,   ACR = NA,   trace = NA,   addon = \"ACR\",   classify )"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_CKD_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SCORE2/OP with CKD add-on risk score function for a data frame; SCORE2/OP = Systematic COronary Risk Evaluation /and Older Population CKD = Chronic kidney disease — SCORE2_CKD_scores","text":"data data frame variables needed calculation:  Age, Gender, smoker, systolic.bp, diabetes, total.chol, total.hdl Risk.region character value set desired risk region calculations. Categories include \"Low\", \"Moderate\", \"High\", \"high\" Age numeric vector age values, years Gender binary character vector Gender values. Categories include 'male' 'female' smoker binary numeric vector, 1 = yes 0 = systolic.bp numeric vector systolic blood pressure continuous values diabetes binary numeric vector, 1 = yes 0 = total.chol numeric vector total cholesterol values, mmol/L total.hdl numeric vector total high density lipoprotein total.hdl values, mmol/L eGFR numeric vector total estimated glomerular rate (eGFR) values, mL/min/1.73m2 ACR numeric vector total urine albumin creatine ratio (ACR) values, mg/g. Default set NA trace character vector urine protein dipstick categories. Categories include 'negative', 'trace', '1+', '2+', '3+', '4+. Default set NA addon set add-wish calculate. Categories include 'ACR' 'trace'. Default set 'ACR' classify set TRUE wish add column scores' categories","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_CKD_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SCORE2/OP with CKD add-on risk score function for a data frame; SCORE2/OP = Systematic COronary Risk Evaluation /and Older Population CKD = Chronic kidney disease — SCORE2_CKD_scores","text":"vector SCORE2/OP score calculations CKD add-ons /vector classifications indicated","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_CKD_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SCORE2/OP with CKD add-on risk score function for a data frame; SCORE2/OP = Systematic COronary Risk Evaluation /and Older Population CKD = Chronic kidney disease — SCORE2_CKD_scores","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100  # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(40:85, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family.history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE),   sweating = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pain.radiation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pleuritic = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   palpation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.twi = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   second_hstni = as.numeric(sample(1:200, num_rows, replace = TRUE)),   killip.class = as.numeric(sample(1:4, num_rows, replace = TRUE)),   systolic.bp = as.numeric(sample(90:180, num_rows, replace = TRUE)),   heart.rate = as.numeric(sample(0:300, num_rows, replace = TRUE)),   creat = as.numeric(sample(0:4, num_rows, replace = TRUE)),   cardiac.arrest = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.pci = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.cabg = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   aspirin = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   number.of.episodes.24h = as.numeric(sample(0:20, num_rows, replace = TRUE)),   total.chol = as.numeric(round(runif(num_rows, 3.9, 7.2), 1)),   total.hdl = as.numeric(round(runif(num_rows, .8, 2.1), 1)),   Ethnicity = sample(c(\"white\", \"black\", \"asian\", \"other\"), num_rows, replace = TRUE),   eGFR = as.numeric(sample(15:120, num_rows, replace = TRUE)),   ACR = as.numeric(sample(5:1500, num_rows, replace = TRUE)),   trace = sample(c(\"trace\", \"1+\", \"2+\", \"3+\", \"4+\"), num_rows, replace = TRUE) )  # Call the function with the cohort_xx result <- SCORE2_CKD_scores(data = cohort_xx, Risk.region = \"Low\", addon = \"ACR\", classify = TRUE)  # Print the results summary(result$SCORE2_score) #> Warning: Unknown or uninitialised column: `SCORE2_score`. #> Length  Class   Mode  #>      0   NULL   NULL  summary(result$SCORE2_strat) #> Warning: Unknown or uninitialised column: `SCORE2_strat`. #> Length  Class   Mode  #>      0   NULL   NULL"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_Diabetes.html","id":null,"dir":"Reference","previous_headings":"","what":"SCORE2-Diabetes — SCORE2_Diabetes","title":"SCORE2-Diabetes — SCORE2_Diabetes","text":"function calculates 10-year cardiovascular risk estimation patients aged 40 69 years type 2 diabetes without atherosclerotic cardiovascular disease (ASCVD) severe target organ damage (TOD) using doi:10.1093/eurheartj/ehad260  SCORE2-Diabetes algorithm. Risk score expressed percentage one decimal place. also categorises patients different risk groups.","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_Diabetes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SCORE2-Diabetes — SCORE2_Diabetes","text":"","code":"SCORE2_Diabetes(   Risk.region,   Age,   Gender,   smoker,   systolic.bp,   total.chol,   total.hdl,   diabetes,   diabetes.age,   HbA1c,   eGFR,   classify = FALSE )"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_Diabetes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SCORE2-Diabetes — SCORE2_Diabetes","text":"Risk.region Input character indicate European risk region group patient belongs . allowed categories Low Moderate High high Age Input positive integer indicate age patient. Gender Input character indicate European risk region group patient belongs . allowed categories male female smoker Input integer 0 1 indicate patient current smoker. 0 stands patient either former/past smoker non-smoker. 1 stands patient current smoker. systolic.bp Input positive numeric value indicate patient's systolic blood pressure \\(mm HG\\). total.chol Input positive numeric value indicate patient's total cholesterol \\(mmol/L\\). total.hdl Input positive numeric value indicate patient's high-density lipoprotein (HDL) \\(mmol/L\\). diabetes Input integer 0 1 indicate patient diabetes. 0 stands diabetes. 1 stands diabetes. diabetes.age Input positive integer indicate age patient diagnosed diabetes. can set NA patient diabetic. HbA1c Input positive numeric value indicate patient's hemoglobin A1C (HbA1c) \\(mmol/mol\\). eGFR Input positive numeric value indicate patient's estimated glomerular filtration rate (eGFR) \\(ml/min/1.73m^2\\). classify set TRUE, function return patient's risk group based SCORE2-Diabetes risk score percentage rounded one decimal place. Default: FALSE. Risk groups classified based Figure 3  doi:10.1093/eurheartj/ehad192  2023 ESC Guidelines management cardiovascular disease patients diabetes:","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_Diabetes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SCORE2-Diabetes — SCORE2_Diabetes","text":"SCORE2-Diabetes risk doi:10.1093/eurheartj/ehad260  score expressed positive percentage rounded one decimal place classify FALSE. patient's risk group classify TRUE.","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_Diabetes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SCORE2-Diabetes — SCORE2_Diabetes","text":"doi:10.1093/eurheartj/ehad260  developed extending SCORE2 doi:10.1093/eurheartj/ehad260  algorithms using 229460 participants (43706 CVD events) type 2 diabetes without previous CVD four population data sources [Scottish Care Information—Diabetes (SCID), Clinical Practice Research Datalink (CPRD), UK Biobank (UKB), Emerging Risk Factors Collaboration (ERFC)] across seven countries (England, Wales, Scotland, France, Germany, Italy, USA).","code":""},{"path":[]},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_Diabetes.html","id":"primary-paper","dir":"Reference","previous_headings":"","what":"Primary Paper","title":"SCORE2-Diabetes — SCORE2_Diabetes","text":"SCORE2-Diabetes Working Group ESC Cardiovascular Risk Collaboration,         SCORE2-Diabetes: 10-year cardiovascular risk estimation type 2 diabetes         Europe, Eur Heart J, 44:2544–2556,        doi:10.1093/eurheartj/ehad260","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_Diabetes.html","id":"clinical-practice-guidelines","dir":"Reference","previous_headings":"","what":"Clinical Practice Guidelines","title":"SCORE2-Diabetes — SCORE2_Diabetes","text":"Marx N, Federici M, Schütt K, Müller-Wieland D,         Ajjan RA,vAntunes MJ, Christodorescu RM, Crawford C,         Angelantonio ED, Eliasson B, Espinola-Klein C,         Fauchier L, Halle M, Herrington WG,         Kautzky-Willer , Lambrinou E, Lesiak M,         Lettino M, McGuire DK, Mullens W,         Rocca B, Sattar N,         ESC Scientific Document Group,         2023 ESC Guidelines management cardiovascular         disease patients diabetes: Developed task force         management cardiovascular disease patients         diabetes European Society Cardiology (ESC),         Eur Heart J, 44:4043–4140,         doi:10.1093/eurheartj/ehad260","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_Diabetes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SCORE2-Diabetes — SCORE2_Diabetes","text":"","code":"# 60 years old male from low risk region # who is a non-smoker, diabetic at age 60 # with a systolic blood pressure of 140 mmHg, # total cholesterol of 5.5 mmol/L, # HDL cholesterol of 1.3 mmol/L, # HbA1c of 50 mmol/mol and # eGFR of 90 mL/min/1.73m2 # will have a risk score of 8.4 and # at moderate risk of CVD.  SCORE2_Diabetes(   Risk.region = \"Low\",   Age = 60,   Gender = \"male\",   smoker = 0,   systolic.bp = 140,   total.chol = 5.5,   total.hdl = 1.3,   diabetes = 1,   diabetes.age = 60,   HbA1c = 50,   eGFR = 90,   classify = FALSE ) #> [1] 8.4  SCORE2_Diabetes(   Risk.region = \"Low\",   Age = 60,   Gender = \"male\",   smoker = 0,   systolic.bp = 140,   total.chol = 5.5,   total.hdl = 1.3,   diabetes = 1,   diabetes.age = 60,   HbA1c = 50,   eGFR = 90,   classify = TRUE ) #> [1] \"Moderate risk\""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"SCORE2/OP risk score function for data frame; SCORE2/OP = Systematic COronary Risk Evaluation /and Older Population — SCORE2_scores","title":"SCORE2/OP risk score function for data frame; SCORE2/OP = Systematic COronary Risk Evaluation /and Older Population — SCORE2_scores","text":"function allows calculate SCORE2 OP score row wise data frame required variables. retrieve data frame two extra columns including calculations classifications","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SCORE2/OP risk score function for data frame; SCORE2/OP = Systematic COronary Risk Evaluation /and Older Population — SCORE2_scores","text":"","code":"SCORE2_scores(   data,   Risk.region,   Age = Age,   Gender = Gender,   smoker = smoker,   systolic.bp = systolic.bp,   diabetes = diabetes,   total.chol = total.chol,   total.hdl = total.hdl,   classify )"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SCORE2/OP risk score function for data frame; SCORE2/OP = Systematic COronary Risk Evaluation /and Older Population — SCORE2_scores","text":"data data frame variables needed calculation:  Age, Gender, smoker, systolic.bp, diabetes, total.chol, total.hdl Risk.region character value set desired risk region calculations. Categories include Age numeric vector age values, years Gender binary character vector Gender values. Categories include 'male' 'female'. smoker binary numeric vector, 1 = yes 0 = systolic.bp numeric vector systolic blood pressure continuous values diabetes binary numeric vector, 1 = yes 0 = total.chol numeric vector total cholesterol values, mmol/L total.hdl numeric vector total high density lipoprotein total.hdl values, mmol/L classify set TRUE wish add column scores' categories","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SCORE2/OP risk score function for data frame; SCORE2/OP = Systematic COronary Risk Evaluation /and Older Population — SCORE2_scores","text":"data frame two extra columns including SCORE2/OP score calculations classifications","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/SCORE2_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SCORE2/OP risk score function for data frame; SCORE2/OP = Systematic COronary Risk Evaluation /and Older Population — SCORE2_scores","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100  # Create a larger dataset with 100 rows cohort_xx <- data.frame(    typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(40:85, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family.history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE),   sweating = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pain.radiation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pleuritic = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   palpation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.twi = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   second_hstni = as.numeric(sample(1:200, num_rows, replace = TRUE)),   killip.class = as.numeric(sample(1:4, num_rows, replace = TRUE)),   systolic.bp = as.numeric(sample(90:180, num_rows, replace = TRUE)),   heart.rate = as.numeric(sample(0:300, num_rows, replace = TRUE)),   creat = as.numeric(sample(0:4, num_rows, replace = TRUE)),   cardiac.arrest = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.pci = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.cabg = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   aspirin = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   number.of.episodes.24h = as.numeric(sample(0:20, num_rows, replace = TRUE)),   total.chol = as.numeric(round(runif(num_rows, 3.9, 7.2), 1)),   total.hdl = as.numeric(round(runif(num_rows, .8, 2.1), 1)),   Ethnicity = sample(c(\"white\", \"black\", \"asian\", \"other\"), num_rows, replace = TRUE) )  # Call the function with the cohort_xx result <- SCORE2_scores(data = cohort_xx, Risk.region = \"Low\", classify = TRUE)  # Print the results summary(result$SCORE2_score) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   1.000   4.475   7.750  10.421  14.200  35.900  summary(result$SCORE2_strat) #> Very low risk      Low risk Moderate risk     High risk  #>             0            23            39            38"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/TIMI.html","id":null,"dir":"Reference","previous_headings":"","what":"Thrombolysis In Myocardial Infarction (TIMI) Risk Score for UA/NSTEMI function — TIMI","title":"Thrombolysis In Myocardial Infarction (TIMI) Risk Score for UA/NSTEMI function — TIMI","text":"function implements TIMI score calculation vector Age <65 = 0 65 - 74 = 2 >= 75 = 3 Risk factors >3* yes = 1,  = 0 Known CAD (stenosis >= 50 yes = 1,  = 0 Aspirin Use yes = 1,  = 0 Severe angina yes = 1,  = 0 ECG ST Elevation LBBB yes = 1,  = 0 Positive cardiac marker yes = 1,  = 0 Four possible outcomes 0 = low risk 1-2 = Low risk 3-4 = Moderate risk =>5 = High risk","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/TIMI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thrombolysis In Myocardial Infarction (TIMI) Risk Score for UA/NSTEMI function — TIMI","text":"","code":"TIMI(   Age = Age,   hypertension = hypertension,   hyperlipidaemia = hyperlipidaemia,   family.history = family.history,   diabetes = diabetes,   smoker = smoker,   previous.pci = previous.pci,   previous.cabg = previous.cabg,   aspirin = aspirin,   number.of.episodes.24h = number.of.episodes.24h,   ecg.st.depression = ecg.st.depression,   presentation_hstni = presentation_hstni,   Gender = Gender,   classify )"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/TIMI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thrombolysis In Myocardial Infarction (TIMI) Risk Score for UA/NSTEMI function — TIMI","text":"Age numeric vector age values, years hypertension binary numeric vector, 1 = yes 0 = hyperlipidaemia binary numeric vector, 1 = yes 0 = family.history binary numeric vector, 1 = yes 0 = diabetes binary numeric vector, 1 = yes 0 = smoker binary numeric vector, 1 = yes 0 = previous.pci binary numeric vector, 1 = yes 0 = previous.cabg binary numeric vector, 1 = yes 0 = aspirin binary numeric vector, 1 = yes 0 = number..episodes.24h numeric vector number angina episodes 24 hours ecg.st.depression binary numeric vector, 1 = yes 0 = presentation_hstni continuous numeric vector troponin levels Gender binary character vector sex values. Categories include 'male' 'female' classify set TRUE wish add column scores' categories","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/TIMI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Thrombolysis In Myocardial Infarction (TIMI) Risk Score for UA/NSTEMI function — TIMI","text":"vector TIMI score calculations /vector classifications indicated","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/TIMI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Thrombolysis In Myocardial Infarction (TIMI) Risk Score for UA/NSTEMI function — TIMI","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100  # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(30:80, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family.history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE),   sweating = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pain.radiation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pleuritic = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   palpation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.twi = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   second_hstni = as.numeric(sample(1:200, num_rows, replace = TRUE)),   killip.class = as.numeric(sample(1:4, num_rows, replace = TRUE)),   systolic.bp = as.numeric(sample(0:300, num_rows, replace = TRUE)),   heart.rate = as.numeric(sample(0:300, num_rows, replace = TRUE)),   creat = as.numeric(sample(0:4, num_rows, replace = TRUE)),   cardiac.arrest = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.pci = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.cabg = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   aspirin = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   number.of.episodes.24h = as.numeric(sample(0:20, num_rows, replace = TRUE)),   total.chol = as.numeric(sample(5:100, num_rows, replace = TRUE)),   total.hdl = as.numeric(sample(2:5, num_rows, replace = TRUE)),   Ethnicity = sample(c(\"white\", \"black\", \"asian\", \"other\"), num_rows, replace = TRUE) )   # Call the function with the cohort_xx    results <- cohort_xx %>% rowwise() %>%   mutate(TIMI_score = TIMI(Age, hypertension, hyperlipidaemia, family.history,   diabetes, smoker, previous.pci, previous.cabg, aspirin, number.of.episodes.24h,   ecg.st.depression, presentation_hstni, Gender, classify = FALSE))"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/TIMI_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"TIMI UA/NSTEMI Risk Score function for data frame; TIMI = Thrombolysis In Myocardial Infarction — TIMI_scores","title":"TIMI UA/NSTEMI Risk Score function for data frame; TIMI = Thrombolysis In Myocardial Infarction — TIMI_scores","text":"function allows calculate TIMI score row wise data frame required variables. retrieve data frame two extra columns including calculations classifications","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/TIMI_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TIMI UA/NSTEMI Risk Score function for data frame; TIMI = Thrombolysis In Myocardial Infarction — TIMI_scores","text":"","code":"TIMI_scores(   data,   Age = Age,   hypertension = hypertension,   hyperlipidaemia = hyperlipidaemia,   family.history = family.history,   diabetes = diabetes,   smoker = smoker,   previous.pci = previous.pci,   previous.cabg = previous.cabg,   aspirin = aspirin,   number.of.episodes.24h = number.of.episodes.24h,   ecg.st.depression = ecg.st.depression,   presentation_hstni = presentation_hstni,   Gender = Gender,   classify )"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/TIMI_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TIMI UA/NSTEMI Risk Score function for data frame; TIMI = Thrombolysis In Myocardial Infarction — TIMI_scores","text":"data data frame variables needed calculation: typical_symptoms.num, ecg.normal, abn.repolarisation, ecg.st.depression,Age, diabetes, smoker, hypertension, hyperlipidaemia, family.history, atherosclerotic.disease, presentation_hstni, Gender Age numeric vector age values, years hypertension binary numeric vector, 1 = yes 0 = hyperlipidaemia binary numeric vector, 1 = yes 0 = family.history binary numeric vector, 1 = yes 0 = diabetes binary numeric vector, 1 = yes 0 = smoker binary numeric vector, 1 = yes 0 = previous.pci binary numeric vector, 1 = yes 0 = previous.cabg binary numeric vector, 1 = yes 0 = aspirin binary numeric vector, 1 = yes 0 = number..episodes.24h numeric vector number angina episodes 24 hours ecg.st.depression binary numeric vector, 1 = yes 0 = presentation_hstni continuous numeric vector troponin levels Gender binary character vector sex values. Categories include 'male' 'female' classify set TRUE wish add column scores' categories","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/TIMI_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TIMI UA/NSTEMI Risk Score function for data frame; TIMI = Thrombolysis In Myocardial Infarction — TIMI_scores","text":"data frame two extra columns including HEART score calculations classifications","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/TIMI_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TIMI UA/NSTEMI Risk Score function for data frame; TIMI = Thrombolysis In Myocardial Infarction — TIMI_scores","text":"","code":"# Create a data frame or list with the necessary variables # Set the number of rows num_rows <- 100  # Create a larger dataset with 100 rows cohort_xx <- data.frame(   typical_symptoms.num = as.numeric(sample(0:6, num_rows, replace = TRUE)),   ecg.normal = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   abn.repolarisation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.st.depression = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   Age = as.numeric(sample(30:80, num_rows, replace = TRUE)),   diabetes = sample(c(1, 0), num_rows, replace = TRUE),   smoker = sample(c(1, 0), num_rows, replace = TRUE),   hypertension = sample(c(1, 0), num_rows, replace = TRUE),   hyperlipidaemia = sample(c(1, 0), num_rows, replace = TRUE),   family.history = sample(c(1, 0), num_rows, replace = TRUE),   atherosclerotic.disease = sample(c(1, 0), num_rows, replace = TRUE),   presentation_hstni = as.numeric(sample(10:100, num_rows, replace = TRUE)),   Gender = sample(c(\"male\", \"female\"), num_rows, replace = TRUE),   sweating = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pain.radiation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   pleuritic = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   palpation = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   ecg.twi = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   second_hstni = as.numeric(sample(1:200, num_rows, replace = TRUE)),   killip.class = as.numeric(sample(1:4, num_rows, replace = TRUE)),   systolic.bp = as.numeric(sample(0:300, num_rows, replace = TRUE)),   heart.rate = as.numeric(sample(0:300, num_rows, replace = TRUE)),   creat = as.numeric(sample(0:4, num_rows, replace = TRUE)),   cardiac.arrest = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.pci = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   previous.cabg = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   aspirin = as.numeric(sample(c(0, 1), num_rows, replace = TRUE)),   number.of.episodes.24h = as.numeric(sample(0:20, num_rows, replace = TRUE)),   total.chol = as.numeric(sample(5:100, num_rows, replace = TRUE)),   total.hdl = as.numeric(sample(2:5, num_rows, replace = TRUE)),   Ethnicity = sample(c(\"white\", \"black\", \"asian\", \"other\"), num_rows, replace = TRUE) )   # Call the function with the cohort_xx result <- TIMI_scores(data = cohort_xx, classify = TRUE) # Print the results summary(result$TIMI_score) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>    2.00    4.00    4.00    4.38    5.00    7.00  summary(result$TIMI_strat) #> Very low risk      Low risk Moderate risk     High risk  #>             0             2            53            45"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/round_to_nearest_digit.html","id":null,"dir":"Reference","previous_headings":"","what":"Round To Nearest Digit — round_to_nearest_digit","title":"Round To Nearest Digit — round_to_nearest_digit","text":"function symmetric rounding nearest digits.","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/round_to_nearest_digit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round To Nearest Digit — round_to_nearest_digit","text":"","code":"round_to_nearest_digit(number, digits = 0)"},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/round_to_nearest_digit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round To Nearest Digit — round_to_nearest_digit","text":"number Input numeric value digits Input integer indicating number decimal places used. default, symmetrically rounds nearest integer. Default: 0","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/reference/round_to_nearest_digit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round To Nearest Digit — round_to_nearest_digit","text":"","code":"round_to_nearest_digit(0.5) #> [1] 1 round_to_nearest_digit(1.5) #> [1] 2 round_to_nearest_digit(-0.5) #> [1] -1 round_to_nearest_digit(-1.5) #> [1] -2"},{"path":"https://dvicencio.github.io/RiskScorescvd/news/index.html","id":"version-020","dir":"Changelog","previous_headings":"","what":"version 0.2.0","title":"version 0.2.0","text":"CRAN release: 2024-06-27","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/news/index.html","id":"two-new-risk-scores-added-0-2-0","dir":"Changelog","previous_headings":"","what":"Two new risk scores added","title":"version 0.2.0","text":"-SCORE2 updated CKD add-ons implemented","code":""},{"path":[]},{"path":"https://dvicencio.github.io/RiskScorescvd/news/index.html","id":"doi-added-to-description-file-0-0-1","dir":"Changelog","previous_headings":"","what":"DOI added to description file","title":"version 0.0.1","text":"Methods references added","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/news/index.html","id":"package-passed-all-tests-0-0-1","dir":"Changelog","previous_headings":"","what":"Package passed all tests","title":"version 0.0.1","text":"Added information suggested Victoria Wimmer fixed","code":""},{"path":"https://dvicencio.github.io/RiskScorescvd/news/index.html","id":"pakage-passed-all-tests-with-notes-only-0-0-1","dir":"Changelog","previous_headings":"","what":"Pakage Passed all Tests with Notes Only","title":"version 0.0.1","text":"Manatainer name Global environment","code":""},{"path":[]},{"path":"https://dvicencio.github.io/RiskScorescvd/news/index.html","id":"newsmd-setup-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"NEWS.md setup","title":"version 0.0.0.9000","text":"added NEWS.md creation newsmd","code":""}]
